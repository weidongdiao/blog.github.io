<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[What is Lazyman]]></title>
      <url>http://www.diaoweidong.com/2017/01/30/What-is-Lazyman/</url>
      <content type="html"><![CDATA[<blockquote>
<p>Quote: <a href="">https://github.com/easonhan007/lazyman</a></p>
</blockquote>
<p>##Introduction of LazyMan</p>
<blockquote>
<ol>
<li><p>Lazyman is a simple web automation test framework using selenium-webdriver, watir-webdriver, page-object and rspec.</p>
</li>
<li><p>Page Object: Page object abstract  each test page as a Page class and encapsulate the test objects(page element) of the page and basic test steps(logic action). In order to increase readability, reusability and consistency of code.</p>
</li>
<li><p>Rspect: Rspect is one of test plug-in in Ruby.</p>
</li>
</ol>
</blockquote>
<h2 id="How-to-achieve-LazyMan"><a href="#How-to-achieve-LazyMan" class="headerlink" title="How to achieve LazyMan"></a>How to achieve LazyMan</h2><p>`<br>function _LazyMan(_name) {<br>    var _this = this;<br>    _this.tasks = [];<br>    _this.tasks.push(function() {<br>        console.log(‘Hi! This is ‘ + _name + ‘!’);<br>        // 这里的this是window，所以要缓存this<br>        _this.next();<br>    });<br>    setTimeout(function() {<br>        _this.next();<br>    }, 0);<br>}</p>
<p>// push函数里面的this和setTimeout函数里面的this都指向全局作用域，所以要缓存当前this指向<br>_LazyMan.prototype.next = function() {<br>    var _fn = this.tasks.shift();<br>    _fn &amp;&amp; _fn();<br>}<br>_LazyMan.prototype.sleep = function(_time) {<br>    var _this = this;<br>    _this.tasks.push(function() {<br>        setTimeout(function() {<br>            console.log(‘Wake up after ‘ + _time);<br>            _this.next();<br>        }, _time);<br>    });<br>    return _this;<br>}<br>_LazyMan.prototype.sleepFirst = function(_time) {<br>    var _this = this;<br>    _this.tasks.unshift(function() {<br>        setTimeout(function() {<br>            console.log(‘Wake up after ‘ + _time);<br>            _this.next();<br>        }, _time);<br>    });<br>    return _this;<br>}<br>_LazyMan.prototype.eat = function(_eat) {<br>    var _this = this;<br>    _this.tasks.push(function() {<br>        console.log(‘Eat ‘ + _eat);<br>        _this.next();<br>    });<br>    return _this;<br>}</p>
<p>// 封装对象<br>var LazyMan = function(_name) {<br>    return new _LazyMan(_name);<br>}<br>`</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[First Blog]]></title>
      <url>http://www.diaoweidong.com/2017/01/14/First-Blog/</url>
      <content type="html"><![CDATA[<p>第一篇博客，My first blog<br><a id="more"></a><br>这个博客主要想用来分享在web开发学习过程中个人学到的一些知识和技术，作为一个技术备忘录，随时分享一些自己在学习过程中的心得。</p>
<p>欢迎批评指正，技术分享。</p>
<p>My blog is used to share some knowledge and technique when I study in the field of web development.</p>
<p>Please fell free to contact me if you have any good suggestions or share more knowledge with me. Thanks!</p>
]]></content>
    </entry>
    
  
  
</search>
